<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0066)lec8.htm -->
<HTML><HEAD><TITLE>Логическое и функциональное программирование. Лекция 8</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251"><!-- VLINK="#FF0000"-->
<META content="MSHTML 6.00.2600.0" name=GENERATOR></HEAD>
<BODY text=#000000 vLink=#800080 aLink=#0000ff link=blue bgColor=#c7d4ea><FONT
face="Arial Cyr">
<TABLE cellSpacing=0 width="100%" align=center border=0>
  <TBODY>
  <TR><!-- Row 1 -->
    <TD width=10 bgColor=#8181c0>
    <TD vAlign=center align=left width="65%" bgColor=#8181c0><FONT
      color=#c6c6ff size=4><B><I>Лекция 8</I></B></FONT>
    <TD bgColor=#c7d4ea>
    <TD bgColor=#c7d4ea></TD>
  <TR><!-- Row 2 -->
    <TD width=10 bgColor=#a3a3d1><FONT color=#8181c9></FONT>
    <TD vAlign=center align=middle width="65%" bgColor=#a3a3d1 height=20><FONT
      color=#004080 size=5><B><I>Операции в Прологе. Поиск.</I></B> </FONT>
    <TD bgColor=#c7d4ea>
    <TD bgColor=#c7d4ea></TD></TR></TBODY></TABLE></FONT>
<CENTER></CENTER>
<H2><FONT face="Arial Cyr" color=#004080>Cодержание</FONT></H2>
<DL>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A1">1
  Операции (Операторы). </A></FONT>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A1.1">1.1
  Приоритет оператора </A></FONT>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A1.2">1.2.
  Тип оператора </A></FONT>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A1.3">1.3.Объявление
  операций </A></FONT>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A2">2
  Поиск. </A></FONT>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A2.1">2.1
  Поиск в Прологе</A></FONT>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A2.2">2.2
  Поиск в глубину</A></FONT>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A2.3">2.3
  Поиск в ширину</A></FONT>
  <DD><FONT face="Arial Cyr"><IMG src="lec8.files/blueball.gif"> <A
  href="lec8.htm#A2.4">2.4
  Резюме Поиска</A></FONT> </DD></DL><FONT color=#000080>
<P align=center><FONT face="Arial Cyr"><IMG height=7 src="lec8.files/saqual.gif"
width="80%"></FONT> </P>
<P>
<H2 align=center><A name=A1></A>1. Операции (Операторы).</H2>
<CENTER><FONT face="Arial Cyr"><IMG height=7 src="lec8.files/saqual.gif"
width="80%"></FONT> </CENTER></FONT>
<P><FONT face="Arial Cyr">Как вы помните для некоторых структур, имеющих
размерность /2, функтор может быть записан между компонентами.
Например<BR><B><FONT face="Arial Cyr">+(1,2)</FONT></B> </FONT></P>
<P><FONT face="Arial Cyr">можно записать как </FONT></P>
<P><FONT face="Arial Cyr"><B>1 + 2 . </B></FONT></P>
<P><FONT face="Arial Cyr">При этом структуру легче воспринимать в программе и
водить.</FONT>
<P><FONT face="Arial Cyr">Пролог предоставляет возможность использовать наряду с
встроенными операторами и дополнительные операторы для структур с арностью
<B><FONT face="Arial Cyr">/2</FONT></B> и <B><FONT face="Arial Cyr">/1.
</FONT></B></FONT>
<P><FONT face="Arial Cyr">Для этого достаточно объявить эту структуру оператором
используя встроенный предикат <FONT face="Arial Cyr"><B>op/3. </B></FONT></FONT>
<P><FONT face="Arial Cyr"><B><FONT face="Arial Cyr">op(Приоритет,Тип,Имя).
</FONT></B></FONT>
<P><FONT face="Arial Cyr">Имя оператора любой атом. </FONT>
<P><FONT color=#000080>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P>
<P>
<H3 align=center><FONT face="Arial Cyr"><A name=A1.1></A>1.1 Приоритет
оператора.</FONT></H3>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P></FONT>
<P><FONT face="Arial Cyr">Приоритет оператора задает порядок выполнения операций
в выражениях, содержащих более одного оператора.</FONT></P>
<P><FONT face="Arial Cyr">Приоритет задается приоритетным номером - числом
обычно в диапазоне <FONT face="Arial Cyr"><B>1-1500</B></FONT> (в нашем случае
до <B><FONT face="Arial Cyr">1200</FONT></B>). </FONT></P>
<P><FONT face="Arial Cyr">Вычисления начинаются с оператора имеющего наименьший
номер и заканчиваются наибольшим номером. </FONT>
<P><FONT face="Arial Cyr">Например, в выражении <B><FONT face="Arial Cyr">x + y
* 2 </FONT></B>приоритет <B>* </B>больше <B>+ </B>и вычисления производятся
как<B><FONT face="Arial Cyr"> x + (y * 2)</FONT></B>. Приоритетный номер скобки
равен нулю.(Самый высокий приоритет)</FONT>
<P><FONT face="Arial Cyr">Поэтому скобки могут использоваться для изменения
ассоциативности. </FONT>
<P><FONT color=#000080>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P>
<P>
<H3 align=center><FONT face="Arial Cyr"><A name=A1.2></A>1.2. Тип
оператора.</FONT></H3>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P></FONT><FONT face="Arial Cyr">Тип задает позицию и
ассоциативность оператора. </FONT>
<P><FONT face="Arial Cyr">Позиция оператора указывает, где он записывается по
отношению к своим аргументам. </FONT>
<P><FONT face="Arial Cyr">Для арности<FONT face="Arial Cyr" color=#800080>
<B>2</B></FONT><FONT color=#ff3333> </FONT>оператор может быть только инфиксным
и располагать между аргументами. </FONT>
<P><FONT face="Arial Cyr">Например<B> <FONT face="Arial Cyr">2 &gt; 1</FONT>
</B>или <B><FONT face="Arial Cyr">Р;Q </FONT></B></FONT>
<P><FONT face="Arial Cyr">Для арности <B><FONT face="Arial Cyr">1</FONT></B>
оператор может быть </FONT>
<P>
<UL>
  <LI><FONT face="Arial Cyr" color=#800080><B>префиксным</B></FONT><FONT
  face="Arial Cyr"> - записываться перед единственным</FONT> <FONT
  face="Arial Cyr">аргументом : <FONT face="Arial Cyr"><B>not</B></FONT> a или
  <FONT face="Arial Cyr"><B>-1</B></FONT> </FONT>
  <LI><FONT face="Arial Cyr" color=#800080><B>постфиксным</B></FONT><FONT
  face="Arial Cyr"> - записываться после единственного аргумента :<FONT
  face="Arial Cyr"><B> 5!</B></FONT> или </FONT></LI></UL>
<P><FONT face="Arial Cyr">Ассоциативность оператора показывает, какая операция
выполняется первой в выражении, содержащем два или более оператора с одинаковым
приоритетом. </FONT>
<P><FONT face="Arial Cyr">Тип может принимать одно из следующих значений </FONT>
<UL>
  <LI><FONT face="Arial Cyr"><B><FONT face="Arial Cyr" color=#800080 size=+1>xfx
  xfy yfx</FONT></B> для инфиксных операций </FONT>
  <LI><FONT face="Arial Cyr"><B><FONT face="Arial Cyr" color=#800080 size=+1>fy
  fx </FONT></B><FONT color=#333333>для префиксных операций </FONT></FONT>
  <LI><FONT face="Arial Cyr" color=#800080><FONT face="Arial Cyr" size=+1><B>xf
  yf</B></FONT></FONT><FONT face="Arial Cyr"><FONT face="Arial Cyr" size=+1><B>
  </B></FONT>для постфиксных операций </FONT></LI></UL>
<P><FONT face="Arial Cyr">Здесь </FONT>
<UL>
  <LI><FONT face="Arial Cyr"><FONT color=#ffffff><B><FONT
  face="Arial Cyr">f<FONT color=#333333>f</FONT>f</FONT></B></FONT> - функтор,
  </FONT>
  <LI><FONT face="Arial Cyr"><FONT face="Arial Cyr"><B>x</B></FONT> - выражение
  </FONT>
  <LI><FONT face="Arial Cyr"><B><FONT face="Arial Cyr">y</FONT></B> - выражение
  </FONT></LI></UL>
<P><FONT face="Arial Cyr">Для простоты следует запомнить что<FONT
face="Arial Cyr"><B><FONT color=#800080 size=+1> yfx</FONT></B></FONT> имеет
левую ассоциативность. </FONT>
<P><FONT face="Arial Cyr">Например + определен как<BR><B><FONT
face="Arial Cyr">op( 500, yfx, +).</FONT></B><BR><B><FONT face="Arial Cyr">+
</FONT></B>обладает левой ассоциативностью.<BR>Т.е<FONT face="Arial Cyr"><B>. A
+ B + C + D</B></FONT> выполняется как<B><FONT face="Arial Cyr">
+(+(+(A,B),C),D)</FONT></B><BR>Представляется как дерево растущее в низ и
налево:</FONT>
<P><FONT face="Arial Cyr"><BR>
<CENTER><IMG src="lec8.files/im_l1_1.gif"> </FONT></CENTER>
<P><FONT face="Arial Cyr">Наоборот<FONT face="Arial Cyr"><B> xfy
</B></FONT>имеет правую ассоциативность. </FONT>
<P><FONT face="Arial Cyr">Например <B><FONT face="Arial Cyr"
size=+1>,</FONT></B> (&#234;&#238;&#237;&#250;&#254;&#237;&#234;&#246;&#232;&#255; целей) определен как<BR><B><FONT
face="Arial Cyr">op( 1100, xfy, ,).</FONT></B><BR><B><FONT
face="Arial Cyr">,</FONT></B> обладает правой ассоциативностью.<BR>Т.е. <B><FONT
face="Arial Cyr" size=+1>A , B , C , D выполняется как ,(A, ,(B,
,(C,D)</FONT></B><FONT face="Arial Cyr"><B><FONT
size=+1>))</FONT></B></FONT><BR>Представляется как дерево растущее в низ и
направо:</FONT>
<P><FONT face="Arial Cyr"><BR>
<CENTER><IMG src="lec8.files/im_l1_2.gif"> </FONT></CENTER>
<P><FONT face="Arial Cyr"><B><FONT face="Arial Cyr">xyx</FONT></B> - инфиксная
операция, не обладающая свойством ассоциативности </FONT>
<P><FONT face="Arial Cyr">Примером может служить операция mod. </FONT>
<P><FONT face="Arial Cyr">Поэтому </FONT>
<P><FONT face="Arial Cyr">?- <B><FONT face="Arial Cyr">X is 120 mod 50 mod 5
</FONT></B></FONT>
<P><FONT face="Arial Cyr">является недопустимой. </FONT>
<P><FONT face="Arial Cyr">Встроенные операторы для<FONT color=#800080 size=+1>
<B>SWI-prolog</B></FONT> представлены в таблице. </FONT>
<P><FONT face="Arial Cyr">(Все операторы могут быть переопределены
пользователями) </FONT>
<P>
<UL>
  <LI><FONT face="Arial Cyr"><B>1200 fx :-, ?- </B></FONT>
  <LI><FONT face="Arial Cyr"><B>1150 fx dynamic , multifile, module_transparent,
  discontiguous, volatile, initialization </B></FONT>
  <LI><FONT face="Arial Cyr"><B>xfy ;, | </B></FONT>
  <LI><FONT face="Arial Cyr"><B>1050 xf </B></FONT>
  <LI><FONT face="Arial Cyr"><B>1000 xfy , </B></FONT>
  <LI><FONT face="Arial Cyr"><B>954 xfy \\ </B></FONT>
  <LI><FONT face="Arial Cyr"><B>900 fy \+, not </B></FONT>
  <LI><FONT face="Arial Cyr"><B>900 fx ~ </B></FONT>
  <LI><FONT face="Arial Cyr"><B>700 xfx &lt;, =, =.., =@=, =:=, =&lt;, ==, =\=,
  &gt;, &gt;=, @&lt;, @=&lt;, </B></FONT>
  <LI><FONT face="Arial Cyr"><B>@&gt;, @&gt;=, \=, \==, is </B></FONT>
  <LI><FONT face="Arial Cyr"><B>600 xfy : </B></FONT>
  <LI><FONT face="Arial Cyr"><B>500 yfx +, -, /\, \/, xor </B></FONT>
  <LI><FONT face="Arial Cyr"><B>500 fx +, -, ?, \ </B></FONT>
  <LI><FONT face="Arial Cyr"><B>400 yfx *, /, //, &lt;&lt;, &gt;&gt;, mod, rem
  </B></FONT>
  <LI><FONT face="Arial Cyr"><B>200 xfx ** </B></FONT>
  <LI><FONT face="Arial Cyr"><B>200 xfy ^ </B></FONT></LI></UL><FONT
color=#000080>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P>
<P>
<H3 align=center><FONT face="Arial Cyr"><A name=A1.3></A>1.3 Объявление
операций.</FONT></H3>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P></FONT>
<P><FONT face="Arial Cyr">Если объявляется 2 или 1 арная процедура то для
удобства использования</FONT></P>
<P><FONT face="Arial Cyr">с т.з. читабильности программы ее можно объявить как
операцию. </FONT></P>
<P><FONT face="Arial Cyr">(Для<FONT face="Arial Cyr" color=#800080 size=+1><B>
SWI-prolog </B></FONT>op включается в программу как цель, а не как
факт).<BR>Например </FONT>
<P>
<P>
<P>&nbsp;</P>
<P><FONT face="Arial Cyr"><B>:-op(1500,xfx, love).</B></FONT></P>
<P><B><FONT face="Arial Cyr">bob love mary. </FONT></B></P>
<P><B><FONT face="Arial Cyr">pam love sam. </FONT></B></P>
<P> </P>
<P><FONT face="Arial Cyr"><FONT face="Arial Cyr"><B>?- bob love Y.
</B></FONT></FONT></P>
<P><B><FONT face="Arial Cyr">Y = mary. </FONT></B></P>
<P><FONT face="Arial Cyr">Еще один пример </FONT>
<P><PRE><FONT face="Arial Cyr" size=+1>
  <B> ?- X=join(a,b),write(X),nl,op(500,yfx,join),
        write(X).
</B></FONT><FONT face="Arial Cyr"><B>Дает <FONT face="Arial Cyr" size=+1>   join(a, b)
        a join b

        X = a join b
</PRE></FONT></B></FONT><FONT color=#000080>
<CENTER><FONT face="Arial Cyr"><IMG height=7 src="lec8.files/saqual.gif"
width="80%"></FONT> </CENTER>
<H2 align=center><FONT face="Arial Cyr"><A name=A2></A>2. Поиск.</FONT></H2>
<P align=center><FONT face="Arial Cyr"><IMG height=7 src="lec8.files/saqual.gif"
width="80%"></FONT></P></FONT></FONT><FONT face="Arial Cyr">Напомним что:
</FONT>
<P><FONT face="Arial Cyr">Пролог использует быстрый, но глупый(неэффективный)
метод поиска. Написание программы своего поиска не так сложно. </FONT>
<P><FONT face="Arial Cyr">Семейное Дерево. </FONT>
<P><FONT face="Arial Cyr">% - parent ( A, B) истина, если A является родителем
B<BR></FONT>
<P><FONT face="Arial Cyr"><B><FONT face="Arial Cyr">parent( p1, p2 ).
</FONT></B></FONT></P>
<P><B><FONT face="Arial Cyr">parent ( p3, p2 ). </FONT></B></P>
<P><B><FONT face="Arial Cyr">parent ( p2, p4 ). </FONT></B></P>
<P><B><FONT face="Arial Cyr">parent ( p4, p5 ). </FONT></B></P><FONT
color=#000080>
<CENTER><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT> </CENTER>
<H3 align=center><FONT face="Arial Cyr"><A name=A2.1></A>2.1 Поиск в
Прологе.</FONT></H3>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P></FONT><FONT face="Arial Cyr">Основные стратегии поиска:
</FONT>
<P><FONT face="Arial Cyr">Поиск в глубину ( исследуется первый путь до конца
перед переходом на следующий путь )</FONT>
<P><FONT face="Arial Cyr">Поиск в ширину ( исследуются сначала все самые близкие
пути)</FONT>
<P><FONT face="Arial Cyr">Наиболее лучшего ( использует величину
"оценки")</FONT>
<P><FONT color=#000080>
<CENTER><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT> </CENTER>
<H3 align=center><FONT face="Arial Cyr"><A name=A2.2></A>2.2 Поиск в
глубину.</FONT></H3>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P></FONT><FONT face="Arial Cyr">Отслеживайте узлы, которые
еще не исследовались (т.н " " открытые " " узлы ). </FONT>
<CENTER>
<P><FONT face="Arial Cyr"><IMG src="lec8.files/im_l1_3.gif"> </CENTER></FONT>
<P><PRE><FONT face="Arial Cyr"><B>
<FONT face="Arial Cyr" size=+1>search(X, X, T).

search(X, Y, T) :- (edge(X, Z); edge(Z, X)),
not(member(Z, T)),
search(Z, Y, [Z|T]).


member(X, [X|_]) :- !.
member(X, [_|Y]) :- member(X, Y).


edge(a,b).
edge(a,c).
edge(a,d).
edge(b,e).
edge(e,f).
edge(e,g).
edge(d,h).
edge(d,i).
edge(i,j).
</FONT>
</B></FONT></PRE>
<P><FONT face="Arial Cyr">Другой вариант </FONT>
<P><PRE><FONT face="Arial Cyr"><B>
<FONT face="Arial Cyr" size=+1> depth_first(Start, Answer ) :-
                depth_star(/*Open*/ [Start], Answer ),!.

   depth_star( [X|_], X ).
   depth_star( [X|Open1], Y ) :-
       children(X, Children),
       append( Children, Open1, Open2 ),
       depth_star( Open2, Y ).

/*children(A,Bs) is true if A*/
/*is parent of each child in Bs*/
        children(a, [b,c,d]).
        children(b, [e]).
        children(e, [f,g]).
        children(d, [h,i]).
        children(i, [j]).

/* a f */</FONT></B>
</FONT></PRE>
<CENTER>
<P><IMG height=592 src="lec8.files/2.gif" width=516> </CENTER>
<P><FONT face="Arial Cyr">Обратите Внимание: открытый список хранится ,как стек.
</FONT>
<P><FONT face="Arial Cyr">Обратите Внимание на представление: </FONT>
<P><FONT face="Arial Cyr">То есть мы можем представлять граф, как </FONT>
<P>
<P><B><FONT face="Arial Cyr">%-- children(A,Bs) истина если A </FONT></B></P>
<P><B><FONT face="Arial Cyr">%-- является родителем каждого ребенка в Bs
</FONT></B></P>
<P><B><FONT face="Arial Cyr">children(p1, [p2]). </FONT></B></P>
<P><B><FONT face="Arial Cyr">children(p3, [p2]). </FONT></B></P>
<P><B><FONT face="Arial Cyr">children(p2, [p4]). </FONT></B></P>
<P><B><FONT face="Arial Cyr">children(p4, [p5]). </FONT></B></P>
<P><FONT face="Arial Cyr">Мы можем также представить обратное отношение </FONT>
<P>
<P><B><FONT face="Arial Cyr">parents(p2, [p1, p3]). </FONT></B></P>
<P><B><FONT face="Arial Cyr">parents(p4, [p2]). </FONT></B></P>
<P><B><FONT face="Arial Cyr">parents(p5, [p4]). </FONT></B></P><FONT
color=#000080>
<CENTER><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT> </CENTER>
<H3 align=center><FONT face="Arial Cyr"><A name=A2.3></A>2.3 Поиск в
ширину.</FONT></H3>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P></FONT><FONT face="Arial Cyr">Подобен поиску в глубину ,
но хранит открытый список, как очередь. </FONT>
<P><PRE><FONT face="Arial Cyr"><B>
<FONT face="Arial Cyr">  </FONT></B><FONT face="Arial Cyr" size=+1><B><FONT size=3>breadth_first( Start,Answer ) :-
        breadth_star(/*Open*/ [Start],
                     Answer ).

  breadth_star( [X|_], X ).
  breadth_star( [X|Open1], Y ) :-
       children(X, Children),
       append( Open1, Children, Open2 ),
       breadth_star( Open2, Y ).

        children(a, [b,c,d]).
        children(b, [e]).
        children(e, [f,g]).
        children(d, [h,i]).
        children(i, [j]).
<CENTER>
<IMG height=554 src="lec8.files/1.gif" width=514></FONT></B></FONT></FONT></PRE></CENTER><FONT
color=#000080>
<CENTER><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT> </CENTER>
<H3 align=center><FONT face="Arial Cyr"><A name=A2.4></A>2.4 Резюме
Поиска.</FONT></H3>
<P align=center><FONT face="Arial Cyr"><IMG height=5 src="lec8.files/saqual.gif"
width="70%"></FONT></P></FONT><FONT face="Arial Cyr">Поиск в Прологе использует
самую простую (самый дешевую) стратегию. </FONT>
<P><FONT face="Arial Cyr">Другие алгоритмы поиска можно написать на Прологе.
</FONT>
<P><FONT face="Arial Cyr">Эффективность - частая проблема в поиске . </FONT>
<P><FONT face="Arial Cyr">Чем меньше узлов Вы посетите,тем лучше. </FONT><FONT
size=3>
<P>
<HR align=left width="75%" noShade SIZE=1>

</BODY></HTML>